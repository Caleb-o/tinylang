# This is function implicitly returns a unit, which is a 0-type 
function say_hello(name: string, age: int) {
	# Types will be inferred and then bound to the type
	# X will now be an integer
	var x = 10 + age;
	var y = x * x;

	# Nesting a function is possible
	function say_hello_again() {
		print("Hello again, ", name);
	}

	print("Hello , ", name);
	say_hello_again();
}

function bar(foo: bool) {
	var x = -foo;
	print(x, " ", foo, " ", -true, " ", -false);
}

function baz() {
	print(-100, " ", 100);
}

var name = "Bob";
say_hello(name, 32);

name = "Dave";

# Immutability
let foo = 10;
# This would error, since we cannot redefine a let binding
# foo = 20;

bar(true);
baz();

print("Hello!", " Foo ", 123, " ", name);

var a = -2.3;
print(a);